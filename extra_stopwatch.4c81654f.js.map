{"mappings":"AAAA,MAAMA,EAAO,CACXC,SAAUC,SAASC,cAAc,qBACjCC,QAASF,SAASC,cAAc,oBAChCE,SAAUH,SAASC,cAAc,qBACjCG,KAAMJ,SAASC,cAAc,SAQ/B,IAEII,EAFAC,EAAa,KAIjB,MAAMC,EAAcC,IAClBV,EAAKM,KAAKK,UAAYD,CAAM,EA0D9BV,EAAKC,SAASW,iBAAiB,SAvDjB,KACZL,EAAuB,IAAIM,KAE3BL,EAAaM,aAAY,KACvB,MAAMC,EAAQ,IAAIF,KAASN,EAErBS,EAAeC,KAAKC,MAAMH,EAnBP,KAoBnBI,EAAUF,KAAKC,MACnBH,EArBuB,IACL,IAsBdK,EAAUH,KAAKC,MACnBH,EAAU,IAtBM,IAyBZM,EAAQJ,KAAKC,MACjBH,EAAU,KAzBG,IA4BTO,EAAOL,KAAKC,MAChBH,EACG,OAGCQ,EACoB,IAAxB,GAAGJ,IAAUK,OAAeL,EAAU,GAAGA,IAAUM,SAAS,EAAG,KAC3DC,EAA0C,IAA9BN,EAAQO,WAAWH,OAAeJ,EAAU,IAAIA,IAG5DQ,EAAc,GAAGN,KAFe,IAAtB,GAAGD,IAAQG,OAAeH,EAAQ,IAAIA,OAEZK,KAAaH,KAAaP,IAEpE,GAAmB,OAAfR,EAAqB,CACvB,IAAIqB,EAAYd,EAAQF,KAAKiB,MAC7BrB,EAAYoB,GACZE,QAAQC,IAAI,cAAeH,E,CAG7BpB,EAAYmB,GAEZ5B,EAAKC,SAASgC,UAAW,EACzBjC,EAAKK,SAAS4B,UAAW,CAAI,GAC5B,EAAE,IAgBPjC,EAAKC,SAASW,iBAAiB,SAbb,SAelBZ,EAAKI,QAAQQ,iBAAiB,SAbjB,KACXsB,cAAc1B,GACdR,EAAKC,SAASgC,UAAW,EACzBjC,EAAKK,SAAS4B,UAAW,CAAK,IAWhCjC,EAAKK,SAASO,iBAAiB,SARjB,KACZZ,EAAKM,KAAKK,UAAY,EAAE","sources":["src/js/extra_stopwatch.js"],"sourcesContent":["const refs = {\n  startBtn: document.querySelector('button[data-start'),\n  stopBtn: document.querySelector('button[data-stop'),\n  resetBtn: document.querySelector('button[data-reset'),\n  span: document.querySelector('span'),\n};\n\nconst millisecondsInSecond = 1000;\nconst secondsInMinute = 60;\nconst minutesInHour = 60;\nconst hoursInDay = 24;\n\nlet intervalId = null;\nlet delta;\nlet initialDate;\n\nconst renderTimer = string => {\n  refs.span.innerText = string;\n};\n\nconst start = () => {\n  initialDate = delta ?? new Date();\n\n  intervalId = setInterval(() => {\n    const delta = new Date() - initialDate;\n\n    const milliseconds = Math.floor(delta % millisecondsInSecond);\n    const seconds = Math.floor(\n      (delta / millisecondsInSecond) % secondsInMinute\n    );\n    const minutes = Math.floor(\n      (delta / (millisecondsInSecond * secondsInMinute)) % minutesInHour\n    );\n\n    const hours = Math.floor(\n      (delta / (millisecondsInSecond * secondsInMinute * minutesInHour)) %\n        hoursInDay\n    );\n    const days = Math.floor(\n      delta /\n        (millisecondsInSecond * secondsInMinute * minutesInHour * hoursInDay)\n    );\n\n    const UISeconds =\n      `${seconds}`.length === 2 ? seconds : `${seconds}`.padStart(2, '0');\n    const UIMinutes = minutes.toString().length === 2 ? minutes : `0${minutes}`;\n    const UIHours = `${hours}`.length === 2 ? hours : `0${hours}`;\n\n    const timerFormat = `${days}:${UIHours}:${UIMinutes}:${UISeconds}:${milliseconds}`;\n\n    if (intervalId !== null) {\n      let pauseTime = delta + Date.now();\n      renderTimer(pauseTime);\n      console.log('pauseTime: ', pauseTime);\n    }\n\n    renderTimer(timerFormat);\n\n    refs.startBtn.disabled = true;\n    refs.resetBtn.disabled = true;\n  }, 0);\n};\n\nconst startStop = () => {};\n\nconst stop = () => {\n  clearInterval(intervalId);\n  refs.startBtn.disabled = false;\n  refs.resetBtn.disabled = false;\n};\n\nconst reset = () => {\n  refs.span.innerText = '';\n};\n\nrefs.startBtn.addEventListener('click', start);\nrefs.startBtn.addEventListener('click', startStop);\n\nrefs.stopBtn.addEventListener('click', stop);\nrefs.resetBtn.addEventListener('click', reset);\n"],"names":["$f865ae009c322a43$var$refs","startBtn","document","querySelector","stopBtn","resetBtn","span","$f865ae009c322a43$var$initialDate","$f865ae009c322a43$var$intervalId","$f865ae009c322a43$var$renderTimer","string","innerText","addEventListener","Date","setInterval","delta1","milliseconds","Math","floor","seconds","minutes","hours","days","UISeconds","length","padStart","UIMinutes","toString","timerFormat","pauseTime","now","console","log","disabled","clearInterval"],"version":3,"file":"extra_stopwatch.4c81654f.js.map"}