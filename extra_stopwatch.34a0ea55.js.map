{"mappings":"YAAA,IAAMA,EAAO,CACXC,SAAUC,SAASC,cAAc,qBACjCC,QAASF,SAASC,cAAc,oBAChCE,SAAUH,SAASC,cAAc,qBACjCG,KAAMJ,SAASC,cAAc,SAGzBI,EAAuB,IAKzBC,EAAa,KAuDjBR,EAAKC,SAASQ,iBAAiB,SAjDjB,WACZ,IAAIC,EAAc,IAAIC,KAEtBH,EAAaI,aAAY,WACvB,IARgBC,EAQVC,EAAQ,IAAIH,KAASD,EAErBK,EAAeC,KAAKC,MAAMH,EAAQP,GAClCW,EAAUF,KAAKC,MACnBH,EAASP,EAlBS,IAoBdY,EAAUH,KAAKC,MACnBH,EAAU,IApBM,IAuBZM,EAAQJ,KAAKC,MACjBH,EAAU,KAvBG,IA0BTO,EAAOL,KAAKC,MAChBH,EACG,OAGCQ,EACoB,IAAxB,GAAWC,OAARL,GAAUM,OAAeN,EAAU,GAAWK,OAARL,GAAUO,SAAS,EAAG,KAC3DC,EAA0C,IAA9BP,EAAQQ,WAAWH,OAAeL,EAAU,IAAYI,OAARJ,GAC5DS,EAAgC,IAAtB,GAASL,OAANH,GAAQI,OAAeJ,EAAQ,IAAUG,OAANH,GAEhDS,EAAc,GAAWN,OAARF,EAAK,KAAcE,OAAXK,EAAQ,KAAgBL,OAAbG,EAAU,KAAgBH,OAAbD,EAAU,KAAgBC,OAAbR,GAhCpDF,EAkCJgB,EAjCd7B,EAAKM,KAAKwB,UAAYjB,EAmCpBb,EAAKC,SAAS8B,UAAW,EACzB/B,EAAKK,SAAS0B,UAAW,C,GACxB,E,IAgBL/B,EAAKC,SAASQ,iBAAiB,SAbb,WAAM,IAexBT,EAAKI,QAAQK,iBAAiB,SAbjB,WACXuB,cAAcxB,GACdR,EAAKC,SAAS8B,UAAW,EACzB/B,EAAKK,SAAS0B,UAAW,C,IAW3B/B,EAAKK,SAASI,iBAAiB,SARjB,WACZT,EAAKM,KAAKwB,UAAY,E","sources":["src/js/extra_stopwatch.js"],"sourcesContent":["const refs = {\n  startBtn: document.querySelector('button[data-start'),\n  stopBtn: document.querySelector('button[data-stop'),\n  resetBtn: document.querySelector('button[data-reset'),\n  span: document.querySelector('span'),\n};\n\nconst millisecondsInSecond = 1000;\nconst secondsInMinute = 60;\nconst minutesInHour = 60;\nconst hoursInDay = 24;\n\nlet intervalId = null;\n\nconst renderTimer = string => {\n  refs.span.innerText = string;\n};\n\nconst start = () => {\n  let initialDate = new Date();\n\n  intervalId = setInterval(() => {\n    const delta = new Date() - initialDate;\n\n    const milliseconds = Math.floor(delta % millisecondsInSecond);\n    const seconds = Math.floor(\n      (delta / millisecondsInSecond) % secondsInMinute\n    );\n    const minutes = Math.floor(\n      (delta / (millisecondsInSecond * secondsInMinute)) % minutesInHour\n    );\n\n    const hours = Math.floor(\n      (delta / (millisecondsInSecond * secondsInMinute * minutesInHour)) %\n        hoursInDay\n    );\n    const days = Math.floor(\n      delta /\n        (millisecondsInSecond * secondsInMinute * minutesInHour * hoursInDay)\n    );\n\n    const UISeconds =\n      `${seconds}`.length === 2 ? seconds : `${seconds}`.padStart(2, '0');\n    const UIMinutes = minutes.toString().length === 2 ? minutes : `0${minutes}`;\n    const UIHours = `${hours}`.length === 2 ? hours : `0${hours}`;\n\n    const timerFormat = `${days}:${UIHours}:${UIMinutes}:${UISeconds}:${milliseconds}`;\n\n    renderTimer(timerFormat);\n\n    refs.startBtn.disabled = true;\n    refs.resetBtn.disabled = true;\n  }, 0);\n};\n\nconst startStop = () => {};\n\nconst stop = () => {\n  clearInterval(intervalId);\n  refs.startBtn.disabled = false;\n  refs.resetBtn.disabled = false;\n};\n\nconst reset = () => {\n  refs.span.innerText = '';\n};\n\nrefs.startBtn.addEventListener('click', start);\nrefs.startBtn.addEventListener('click', startStop);\n\nrefs.stopBtn.addEventListener('click', stop);\nrefs.resetBtn.addEventListener('click', reset);\n"],"names":["$fa4a304f3eed2a59$var$refs","startBtn","document","querySelector","stopBtn","resetBtn","span","$fa4a304f3eed2a59$var$millisecondsInSecond","$fa4a304f3eed2a59$var$intervalId","addEventListener","initialDate","Date","setInterval","string","delta","milliseconds","Math","floor","seconds","minutes","hours","days","UISeconds","concat","length","padStart","UIMinutes","toString","UIHours","timerFormat","innerText","disabled","clearInterval"],"version":3,"file":"extra_stopwatch.34a0ea55.js.map"}