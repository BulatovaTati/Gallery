{"mappings":"AAAA,MAAMA,EAAO,CACXC,SAAUC,SAASC,cAAc,qBACjCC,QAASF,SAASC,cAAc,oBAChCE,SAAUH,SAASC,cAAc,qBACjCG,KAAMJ,SAASC,cAAc,SAQ/B,IAAII,EAAa,KA4DjBP,EAAKC,SAASO,iBAAiB,SArDjB,KACZ,IAAIC,EAAc,IAAIC,KAEtBH,EAAaI,aAAY,KACvB,MAAMC,EAAQ,IAAIF,KAASD,EAErBI,EAAeC,KAAKC,MAAMH,EAlBP,KAmBnBI,EAAUF,KAAKC,MACnBH,EApBuB,IACL,IAqBdK,EAAUH,KAAKC,MACnBH,EAAU,IArBM,IAwBZM,EAAQJ,KAAKC,MACjBH,EAAU,KAxBG,IA2BTO,EAAOL,KAAKC,MAChBH,EACG,OAGCQ,EACoB,IAAxB,GAAGJ,IAAUK,OAAeL,EAAU,GAAGA,IAAUM,SAAS,EAAG,KAC3DC,EAA0C,IAA9BN,EAAQO,WAAWH,OAAeJ,EAAU,IAAIA,IAG5DQ,EAAc,GAAGN,KAFe,IAAtB,GAAGD,IAAQG,OAAeH,EAAQ,IAAIA,OAEZK,KAAaH,KAAaP,IAhCpD,IAAAa,IAkCJD,EAjCdzB,EAAKM,KAAKqB,UAAYD,EAmCpB1B,EAAKC,SAAS2B,UAAW,EACzB5B,EAAKK,SAASuB,UAAW,EACzBC,QAAQC,IAAIL,EAAY,GACvB,EAAE,IAqBPzB,EAAKI,QAAQI,iBAAiB,SAlBjB,KACXuB,cAAcxB,GACdP,EAAKC,SAAS2B,UAAW,EACzB5B,EAAKK,SAASuB,UAAW,CAAK,IAgBhC5B,EAAKK,SAASG,iBAAiB,SAbjB,KACZR,EAAKM,KAAKqB,UAAY,EAAE","sources":["src/js/extra_stopwatch.js"],"sourcesContent":["const refs = {\n  startBtn: document.querySelector('button[data-start'),\n  stopBtn: document.querySelector('button[data-stop'),\n  resetBtn: document.querySelector('button[data-reset'),\n  span: document.querySelector('span'),\n};\n\nconst millisecondsInSecond = 1000;\nconst secondsInMinute = 60;\nconst minutesInHour = 60;\nconst hoursInDay = 24;\n\nlet intervalId = null;\nlet pause = true;\n\nconst renderTimer = string => {\n  refs.span.innerText = string;\n};\n\nconst start = () => {\n  let initialDate = new Date();\n\n  intervalId = setInterval(() => {\n    const delta = new Date() - initialDate;\n\n    const milliseconds = Math.floor(delta % millisecondsInSecond);\n    const seconds = Math.floor(\n      (delta / millisecondsInSecond) % secondsInMinute\n    );\n    const minutes = Math.floor(\n      (delta / (millisecondsInSecond * secondsInMinute)) % minutesInHour\n    );\n\n    const hours = Math.floor(\n      (delta / (millisecondsInSecond * secondsInMinute * minutesInHour)) %\n        hoursInDay\n    );\n    const days = Math.floor(\n      delta /\n        (millisecondsInSecond * secondsInMinute * minutesInHour * hoursInDay)\n    );\n\n    const UISeconds =\n      `${seconds}`.length === 2 ? seconds : `${seconds}`.padStart(2, '0');\n    const UIMinutes = minutes.toString().length === 2 ? minutes : `0${minutes}`;\n    const UIHours = `${hours}`.length === 2 ? hours : `0${hours}`;\n\n    const timerFormat = `${days}:${UIHours}:${UIMinutes}:${UISeconds}:${milliseconds}`;\n\n    renderTimer(timerFormat);\n\n    refs.startBtn.disabled = true;\n    refs.resetBtn.disabled = true;\n    console.log(timerFormat);\n  }, 0);\n};\n\nconst stop = () => {\n  clearInterval(intervalId);\n  refs.startBtn.disabled = false;\n  refs.resetBtn.disabled = false;\n};\n\nconst reset = () => {\n  refs.span.innerText = '';\n};\n\n// const startStop = () => {\n//   if (intervalId !== null) {\n//     start();\n//   }\n// };\nrefs.startBtn.addEventListener('click', start);\n// refs.startBtn.addEventListener('click', startStop);\n\nrefs.stopBtn.addEventListener('click', stop);\nrefs.resetBtn.addEventListener('click', reset);\n"],"names":["$f865ae009c322a43$var$refs","startBtn","document","querySelector","stopBtn","resetBtn","span","$f865ae009c322a43$var$intervalId","addEventListener","initialDate","Date","setInterval","delta","milliseconds","Math","floor","seconds","minutes","hours","days","UISeconds","length","padStart","UIMinutes","toString","timerFormat","string","innerText","disabled","console","log","clearInterval"],"version":3,"file":"extra_stopwatch.ae5a7cb8.js.map"}